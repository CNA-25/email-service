openapi: 3.0.0
info:
  title: Email API
  description: Only existing emails will recieve an email back. Please DO NOT use a non-existant email, thank you!
  version: 1.0.0
servers:
  - url: https://email-service-git-email-service-api.2.rahtiapp.fi
  - url: http://localhost:8080
paths:
  /invoicing:
    post:
      summary: Send invoice.
      description: Attach PDF file as base64 string.
      requestBody:
        description: Send invoice.
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  to:
                    type: string
                    example: username@arcada.fi
                  subject:
                    type: string
                    example: Invoice
                  body:
                    type: string
                    example: Invoice details here.
                  base64:
                    type: string
                    example: base64String
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Invoice sent.
        '400':
          description: Invalid input!
      security:
        - bearer_token: []
  /newsletter:
    post:
      summary: Send newsletters.
      requestBody:
        description: Send newsletter.
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  to:
                    type: string
                    example: username@arcada.fi
                  subject:
                    type: string
                    example: Newsletter
                  body:
                    type: string
                    example: Newsletter here.
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Newsletter sent.
        '400':
          description: Invalid input!
      security:
        - api_key: []
  /order:
    post:
      summary: Send order confirmation.
      requestBody:
        description: Send order confirmation.
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  subject:
                    type: string
                    example: Order confirmation
                  body:
                    type: array
                    example: Order confirmation here.
                    orderItems:
                      type: array
                      example: Order items here.
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Order confirmation sent.
        '400':
          description: Invalid input!
      security:
        - bearer_token: []
  /shipping:
    post:
      summary: Send shipping information.
      requestBody:
        description: Send shipping details.
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  subject:
                    type: string
                    example: Shipping
                  body:
                    type: string
                    example: Shipping details here.
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      example: Shipping details sent.
        '400':
          description: Invalid input!
      security:
        - bearer_token: []
  /user:
    post:
      summary: Send user information.
      requestBody:
        description: Send account details.
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  to:
                    type: string
                    example: username@arcada.fi
                  subject:
                    type: string
                    example: User Account
                  body:
                    type: string
                    example: User account details here.
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    message:
                      type: string
                      example: User account details sent.
        '400':
          description: Invalid input!
      security:
        - api_key: []
components:
  securitySchemes:
    bearer_token:
      type: http
      scheme: bearer
    api_key:
      type: apiKey
      name: api_key
      in: header